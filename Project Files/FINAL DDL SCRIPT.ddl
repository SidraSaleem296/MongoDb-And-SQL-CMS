-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2022-01-01 13:48:02 PKT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE admin (
    user_id INTEGER NOT NULL,
    salary  INTEGER NOT NULL,
    phone   VARCHAR2(11),
    shift   CHAR(1)
);

ALTER TABLE admin ADD CONSTRAINT admin_pk PRIMARY KEY ( user_id );

CREATE TABLE books (
    library_countrywise_code INTEGER NOT NULL,
    name                     VARCHAR2(100) NOT NULL,
    category                 VARCHAR2(4000) NOT NULL,
    is_available             NUMBER
);

ALTER TABLE books ADD CONSTRAINT books_pk PRIMARY KEY ( name,
                                                        category );

CREATE TABLE contains (
    discipline_name    VARCHAR2(7) NOT NULL,
    courses_general_id VARCHAR2(10) NOT NULL
);

ALTER TABLE contains ADD CONSTRAINT contains_pk PRIMARY KEY ( discipline_name,
                                                              courses_general_id );

CREATE TABLE courses (
    general_id    VARCHAR2(100) NOT NULL,
    admin_user_id INTEGER NOT NULL,
    name          VARCHAR2(100) NOT NULL,
    category      VARCHAR2(10)
);

ALTER TABLE courses ADD CONSTRAINT courses_pk PRIMARY KEY ( general_id );

CREATE TABLE discipline (
    name          VARCHAR2(7) NOT NULL,
    admin_user_id INTEGER NOT NULL
);

ALTER TABLE discipline ADD CONSTRAINT discipline_pk PRIMARY KEY ( name );

CREATE TABLE faculty (
    user_id       INTEGER NOT NULL,
    admin_user_id INTEGER NOT NULL,
    phone         VARCHAR2(11) NOT NULL,
    salary        INTEGER NOT NULL,
    qualification VARCHAR2(4000) NOT NULL,
    joining_data  DATE
);

ALTER TABLE faculty ADD CONSTRAINT faculty_pk PRIMARY KEY ( user_id );

ALTER TABLE faculty ADD CONSTRAINT faculty_pkv1 UNIQUE ( admin_user_id );

CREATE TABLE feechallan (
    challanno          INTEGER NOT NULL,
    admin_user_id      INTEGER NOT NULL,
    student_roll_no    INTEGER NOT NULL,
    amount             INTEGER NOT NULL,
    due_date           DATE NOT NULL,
    past_due_fine      INTEGER NOT NULL,
    student_descipline VARCHAR2(200) NOT NULL,
    is_submitted       CHAR(2)
);

ALTER TABLE feechallan ADD CONSTRAINT feechallan_pk PRIMARY KEY ( challanno );

CREATE TABLE issued_to (
    books_name         VARCHAR2(100) NOT NULL,
    books_category     VARCHAR2(4000) NOT NULL,
    student_roll_no    INTEGER NOT NULL,
    date_of_issue      DATE,
    to_be_returned     DATE,
    student_descipline VARCHAR2(200) NOT NULL
);

ALTER TABLE issued_to
    ADD CONSTRAINT issued_to_pk PRIMARY KEY ( books_name,
                                              books_category,
                                              student_roll_no );

CREATE TABLE librarian (
    user_id                  INTEGER NOT NULL,
    salary                   INTEGER NOT NULL,
    working_hours            INTEGER NOT NULL,
    admin_user_id            INTEGER NOT NULL,
    library_countrywise_code INTEGER NOT NULL
);

ALTER TABLE librarian ADD CONSTRAINT librarian_pk PRIMARY KEY ( user_id );

ALTER TABLE librarian ADD CONSTRAINT librarian_pkv1 UNIQUE ( library_countrywise_code );

CREATE TABLE library (
    name             VARCHAR2(4000) NOT NULL,
    countrywise_code INTEGER NOT NULL,
    rank             INTEGER NOT NULL,
    books_capacity   INTEGER NOT NULL
);

ALTER TABLE library ADD CONSTRAINT library_pk PRIMARY KEY ( countrywise_code );

CREATE TABLE marks (
    faculty_user_id        INTEGER NOT NULL,
    results_result_form_no INTEGER NOT NULL
);

ALTER TABLE marks ADD CONSTRAINT marks_pk PRIMARY KEY ( faculty_user_id,
                                                        results_result_form_no );

CREATE TABLE result (
    id                 INTEGER NOT NULL,
    year               INTEGER,
    student_roll_no    INTEGER NOT NULL,
    student_descipline VARCHAR2(200) NOT NULL
);

ALTER TABLE result ADD CONSTRAINT result_pk PRIMARY KEY ( id );

CREATE TABLE result_particular (
    rp_id              INTEGER NOT NULL,
    "Date"             DATE NOT NULL,
    course             VARCHAR2(100) NOT NULL,
    student_roll_no    INTEGER NOT NULL,
    total              INTEGER NOT NULL,
    obtained_marks     INTEGER NOT NULL,
    result_id2         INTEGER NOT NULL,
    student_descipline VARCHAR2(200) NOT NULL
);

ALTER TABLE result_particular ADD CONSTRAINT results_pk PRIMARY KEY ( rp_id );

CREATE TABLE section (
    roomno          INTEGER NOT NULL,
    capacity        INTEGER,
    discipline_name VARCHAR2(7) NOT NULL,
    name            CHAR(10) NOT NULL
);

ALTER TABLE section ADD CONSTRAINT section_pk PRIMARY KEY ( roomno );

CREATE TABLE student (
    admin_user_id  INTEGER NOT NULL,
    name           VARCHAR2(50) NOT NULL,
    roll_no        INTEGER NOT NULL,
    father_name    VARCHAR2(60),
    gender         CHAR(1),
    age            INTEGER,
    section_roomno INTEGER NOT NULL,
    descipline     VARCHAR2(200) NOT NULL
);

ALTER TABLE student ADD CONSTRAINT student_pk PRIMARY KEY ( roll_no,
                                                            descipline );

CREATE TABLE student_attendance (
    id                 INTEGER NOT NULL,
    student_roll_no    INTEGER NOT NULL,
    "date"             DATE,
    status             CHAR(1),
    course             VARCHAR2(20),
    student_descipline VARCHAR2(200) NOT NULL
);

ALTER TABLE student_attendance ADD CONSTRAINT student_attendance_pk PRIMARY KEY ( id );

CREATE TABLE teach (
    faculty_user_id    INTEGER NOT NULL,
    courses_general_id VARCHAR2(10) NOT NULL
);

ALTER TABLE teach ADD CONSTRAINT teach_pk PRIMARY KEY ( faculty_user_id,
                                                        courses_general_id );

CREATE TABLE teachv1 (
    faculty_user_id INTEGER NOT NULL,
    section_roomno  INTEGER NOT NULL
);

ALTER TABLE teachv1 ADD CONSTRAINT teachv1_pk PRIMARY KEY ( faculty_user_id,
                                                            section_roomno );

CREATE TABLE updates (
    faculty_user_id       INTEGER NOT NULL,
    student_attendance_id INTEGER NOT NULL
);
ALTER TABLE updates ADD CONSTRAINT updates_pk PRIMARY KEY ( faculty_user_id,
                                                            student_attendance_id );

CREATE TABLE "user" (
    user_id   INTEGER NOT NULL,
    password  CHAR(20) NOT NULL,
    user_name CHAR(30) NOT NULL,
    type      CHAR(1) NOT NULL
);

ALTER TABLE "user" ADD CONSTRAINT user_pk PRIMARY KEY ( user_id );

ALTER TABLE admin
    ADD CONSTRAINT admin_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE books
    ADD CONSTRAINT books_library_fk FOREIGN KEY ( library_countrywise_code )
        REFERENCES library ( countrywise_code );

ALTER TABLE contains
    ADD CONSTRAINT contains_courses_fk FOREIGN KEY ( courses_general_id )
        REFERENCES courses ( general_id );

ALTER TABLE contains
    ADD CONSTRAINT contains_discipline_fk FOREIGN KEY ( discipline_name )
        REFERENCES discipline ( name );

ALTER TABLE courses
    ADD CONSTRAINT courses_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE discipline
    ADD CONSTRAINT discipline_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE faculty
    ADD CONSTRAINT faculty_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE faculty
    ADD CONSTRAINT faculty_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE feechallan
    ADD CONSTRAINT feechallan_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE feechallan
    ADD CONSTRAINT feechallan_student_fk FOREIGN KEY ( student_roll_no,
                                                       student_descipline )
        REFERENCES student ( roll_no,
                             descipline );

ALTER TABLE issued_to
    ADD CONSTRAINT issued_to_books_fk FOREIGN KEY ( books_name,
                                                    books_category )
        REFERENCES books ( name,
                           category );

ALTER TABLE issued_to
    ADD CONSTRAINT issued_to_student_fk FOREIGN KEY ( student_roll_no,
                                                      student_descipline )
        REFERENCES student ( roll_no,
                             descipline );

ALTER TABLE librarian
    ADD CONSTRAINT librarian_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE librarian
    ADD CONSTRAINT librarian_library_fk FOREIGN KEY ( library_countrywise_code )
        REFERENCES library ( countrywise_code );

ALTER TABLE librarian
    ADD CONSTRAINT librarian_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( user_id );

ALTER TABLE marks
    ADD CONSTRAINT marks_faculty_fk FOREIGN KEY ( faculty_user_id )
        REFERENCES faculty ( user_id )
            ON DELETE CASCADE;

ALTER TABLE marks
    ADD CONSTRAINT marks_results_fk FOREIGN KEY ( results_result_form_no )
        REFERENCES result_particular ( rp_id )
            ON DELETE CASCADE;

ALTER TABLE result_particular
    ADD CONSTRAINT result_particular_result_fk FOREIGN KEY ( result_id2 )
        REFERENCES result ( id );

ALTER TABLE result
    ADD CONSTRAINT result_student_fk FOREIGN KEY ( student_roll_no,
                                                   student_descipline )
        REFERENCES student ( roll_no,
                             descipline )
            ON DELETE CASCADE;

ALTER TABLE result_particular
    ADD CONSTRAINT results_student_fk FOREIGN KEY ( student_roll_no,
                                                    student_descipline )
        REFERENCES student ( roll_no,
                             descipline )
            ON DELETE CASCADE;

ALTER TABLE section
    ADD CONSTRAINT section_discipline_fk FOREIGN KEY ( discipline_name )
        REFERENCES discipline ( name );

ALTER TABLE student
    ADD CONSTRAINT student_admin_fk FOREIGN KEY ( admin_user_id )
        REFERENCES admin ( user_id );

ALTER TABLE student_attendance
    ADD CONSTRAINT student_attendance_student_fk FOREIGN KEY ( student_roll_no,
                                                               student_descipline )
        REFERENCES student ( roll_no,
                             descipline )
            ON DELETE CASCADE;

ALTER TABLE student
    ADD CONSTRAINT student_section_fk FOREIGN KEY ( section_roomno )
        REFERENCES section ( roomno );

ALTER TABLE teach
    ADD CONSTRAINT teach_courses_fk FOREIGN KEY ( courses_general_id )
        REFERENCES courses ( general_id );

ALTER TABLE teach
    ADD CONSTRAINT teach_faculty_fk FOREIGN KEY ( faculty_user_id )
        REFERENCES faculty ( user_id );

ALTER TABLE teachv1
    ADD CONSTRAINT teachv1_faculty_fk FOREIGN KEY ( faculty_user_id )
        REFERENCES faculty ( user_id );

ALTER TABLE teachv1
    ADD CONSTRAINT teachv1_section_fk FOREIGN KEY ( section_roomno )
        REFERENCES section ( roomno );

ALTER TABLE updates
    ADD CONSTRAINT updates_faculty_fk FOREIGN KEY ( faculty_user_id )
        REFERENCES faculty ( user_id );

ALTER TABLE updates
    ADD CONSTRAINT updates_student_attendance_fk FOREIGN KEY ( student_attendance_id )
        REFERENCES student_attendance ( id );


CREATE OR REPLACE TRIGGER arc_fkarc_1_librarian BEFORE
    INSERT OR UPDATE OF user_id ON librarian
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.type
    INTO d
    FROM
        "user" a
    WHERE
        a.user_id = :new.user_id;

    IF ( d IS NULL OR d <> 'L' ) THEN
        raise_application_error(-20223,
                               'FK librarian_user_FK in Table librarian violates Arc constraint on Table "user" - discriminator column type doesn''t have value ''L''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_faculty BEFORE
    INSERT OR UPDATE OF user_id ON faculty
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.type
    INTO d
    FROM
        "user" a
    WHERE
        a.user_id = :new.user_id;

    IF ( d IS NULL OR d <> 'F' ) THEN
        raise_application_error(-20223,
                               'FK faculty_user_FK in Table faculty violates Arc constraint on Table "user" - discriminator column type doesn''t have value ''F''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_admin BEFORE
    INSERT OR UPDATE OF user_id ON admin
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.type
    INTO d
    FROM
        "user" a
    WHERE
        a.user_id = :new.user_id;

    IF ( d IS NULL OR d <> 'A' ) THEN
        raise_application_error(-20223,
                               'FK admin_user_FK in Table admin violates Arc constraint on Table "user" - discriminator column type doesn''t have value ''A''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

INSERT INTO books (library_countrywise_code, name, category, is_available)
VALUES (1, 'The Great Gatsby', 'Fiction', 1);

INSERT INTO books (library_countrywise_code, name, category, is_available)
VALUES (2, 'To Kill a Mockingbird', 'Fiction', 1);

INSERT INTO books (library_countrywise_code, name, category, is_available)
VALUES (1, 'The Catcher in the Rye', 'Fiction', 0);

ALTER TABLE student
    MODIFY (section_roomno INTEGER);

ALTER TABLE section
    ADD CONSTRAINT section_student_ck CHECK (EXISTS (SELECT 1 FROM student WHERE student.section_roomno = section.roomno));

ALTER TABLE result_particular
    ADD CONSTRAINT result_particular_result_fk FOREIGN KEY (result_id2) REFERENCES result (id);

ALTER TABLE result
    ADD CONSTRAINT result_result_particular_ck CHECK (EXISTS (SELECT 1 FROM result_particular
    WHERE result_particular.result_id2 = result.id));

ALTER TABLE librarian
    ADD CONSTRAINT librarian_library_fk FOREIGN KEY (library_countrywise_code) REFERENCES library (countrywise_code);

ALTER TABLE library
    ADD CONSTRAINT library_superclass_ck CHECK (rank = 1);

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             0
-- ALTER TABLE                             52
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
